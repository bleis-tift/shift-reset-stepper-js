{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?de97","webpack:///./src/App.vue?34d3","webpack:///./src/ocha/parser.js","webpack:///./src/ocha/printer.js","webpack:///./src/ocha/ast-utils.js","webpack:///./src/ocha/stepper.js","webpack:///src/App.vue","webpack:///./src/App.vue?a37b","webpack:///./src/App.vue?180a","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_6da98a50_render","_vm","this","_h","$createElement","_c","_self","attrs","id","directives","rawName","expression","domProps","on","input","$event","target","composing","program","type","click","parse","_v","_s","error","code","_l","step","index","printExpr","reduce","staticRenderFns","peg$subclass","child","parent","ctor","constructor","peg$SyntaxError","message","expected","found","location","Error","captureStackTrace","peg$parse","options","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$literalExpectation","peg$c2","defs","expr","AstProgram","peg$c3","peg$otherExpectation","peg$c4","peg$c5","peg$c6","ast_wildcard","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$classExpectation","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","first","rest","quotes","join","peg$c22","peg$c23","def","peg$c24","peg$c25","peg$c26","ident","ps","body","params","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","err","return","AstDefFun","peg$c27","peg$c28","peg$c29","left","op","right","AstAppFun","peg$c30","peg$c31","peg$c32","f","args","as","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","a","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","e","peg$c38","peg$c39","peg$c40","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","AstLambdaExpr","peg$c41","peg$c42","ast_unit","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","elems","parse_int_default","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$anyExpectation","peg$currPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","text","ignoreCase","parts","inverted","peg$endExpectation","description","peg$computePosDetails","pos","details","charCodeAt","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$buildStructuredError","buildMessage","s0","peg$parseprogram","s1","s2","s3","s4","s5","s6","peg$parsedef","peg$parseadditive_app","peg$parsews0","substr","peg$parseeof","peg$parseident","test","charAt","peg$parsesimple_pat","peg$parseunit_lit","peg$parsedef_fun","s7","s8","peg$parsews","peg$parsemultiplicative_app","peg$parsefun_app","peg$parseparen_expr","peg$parsevalue","peg$parsebool_lit","peg$parseint_lit","peg$parselambda_expr","peg$parsew","classCallCheck","printAst","ast","res","printDef","printParams","printArgs","printParam","param","arg","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","Array","classEscape","any","other","hex","ch","toString","toUpperCase","replace","describeExpectation","describeExpected","descriptions","sort","describeFound","astUnit","lambdaExpr","funApp","gensym","EvaluationContext","outer","x","current","cloned","ectx","stepImpl","isValue","isOpOrLambda","_","nextStepArgPos","stepReset","prev","hole","newArgs","map","stepShift","newEctx","clone","expand","oldEctx","concat","toConsumableArray","newExpr","v","substituted","substitute","_f$params","toArray","p1","pRest","_args","a1","aRest","newLambda","varTable","map_default","set","syms","isComputed","is_finite_default","substituteImpl","cloneMap","newF","newVarTable","delete","newBody","printer","mapToStr","entries","_ref","_ref2","slicedToArray","k","stringify_default","Appvue_type_script_lang_js_","components","steps","parsed","methods","parser_parse","printer_printExpr","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","Vue","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.0fb3f73f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.program),expression:\"program\"}],domProps:{\"value\":(_vm.program)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.program=$event.target.value}}}),_c('br'),_c('input',{attrs:{\"type\":\"button\",\"value\":\"parse\"},on:{\"click\":_vm.parse}}),_c('p',[_vm._v(_vm._s(_vm.error))]),_c('pre',[_vm._v(_vm._s(_vm.code))]),_c('ol',_vm._l((_vm.steps),function(step,index){return _c('li',{key:index},[_vm._v(\"\\n      \"+_vm._s(_vm.printExpr(step))+\"\\n    \")])}),0),_c('input',{attrs:{\"type\":\"button\",\"value\":\"reduce\"},on:{\"click\":_vm.reduce}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = \";;\",\n      peg$c1 = peg$literalExpectation(\";;\", false),\n      peg$c2 = function(defs, expr) { return new AstProgram(defs, expr); },\n      peg$c3 = peg$otherExpectation(\"ident\"),\n      peg$c4 = \"_\",\n      peg$c5 = peg$literalExpectation(\"_\", false),\n      peg$c6 = function() { return ast_wildcard; },\n      peg$c7 = \"let\",\n      peg$c8 = peg$literalExpectation(\"let\", false),\n      peg$c9 = \"fun\",\n      peg$c10 = peg$literalExpectation(\"fun\", false),\n      peg$c11 = \"true\",\n      peg$c12 = peg$literalExpectation(\"true\", false),\n      peg$c13 = \"false\",\n      peg$c14 = peg$literalExpectation(\"false\", false),\n      peg$c15 = /^[a-zA-Z]/,\n      peg$c16 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false),\n      peg$c17 = /^[a-zA-Z0-9_]/,\n      peg$c18 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"_\"], false, false),\n      peg$c19 = \"'\",\n      peg$c20 = peg$literalExpectation(\"'\", false),\n      peg$c21 = function(first, rest, quotes) {\r\n            return first + rest.join('') + quotes.join('');\r\n          },\n      peg$c22 = peg$otherExpectation(\"simple-pat\"),\n      peg$c23 = function(def) { return def; },\n      peg$c24 = \"=\",\n      peg$c25 = peg$literalExpectation(\"=\", false),\n      peg$c26 = function(ident, ps, body) {\r\n            let params = [];\r\n            for (const p of ps) {\r\n              params.push(p[1]);\r\n            }\r\n            return new AstDefFun(ident, params, body);\r\n          },\n      peg$c27 = /^[\\-+]/,\n      peg$c28 = peg$classExpectation([\"-\", \"+\"], false, false),\n      peg$c29 = function(left, op, right) {\r\n            return new AstAppFun(op, [left, right]);\r\n          },\n      peg$c30 = /^[*\\/]/,\n      peg$c31 = peg$classExpectation([\"*\", \"/\"], false, false),\n      peg$c32 = function(f, args) {\r\n            let as = [];\r\n            for (const a of args) {\r\n              as.push(a[1]);\r\n            }\r\n            return new AstAppFun(f, as);\r\n          },\n      peg$c33 = \"(\",\n      peg$c34 = peg$literalExpectation(\"(\", false),\n      peg$c35 = \")\",\n      peg$c36 = peg$literalExpectation(\")\", false),\n      peg$c37 = function(e) { return e; },\n      peg$c38 = \"->\",\n      peg$c39 = peg$literalExpectation(\"->\", false),\n      peg$c40 = function(ps, body) {\r\n            let params = [];\r\n            for (const p of ps) {\r\n              params.push(p[1]);\r\n            }\r\n            return new AstLambdaExpr(params, body);\r\n          },\n      peg$c41 = peg$otherExpectation(\"unit-lit\"),\n      peg$c42 = function() { return ast_unit; },\n      peg$c43 = peg$otherExpectation(\"bool-lit\"),\n      peg$c44 = function() { return true; },\n      peg$c45 = function() { return false; },\n      peg$c46 = peg$otherExpectation(\"int-lit\"),\n      peg$c47 = \"0\",\n      peg$c48 = peg$literalExpectation(\"0\", false),\n      peg$c49 = function() { return 0; },\n      peg$c50 = \"-\",\n      peg$c51 = peg$literalExpectation(\"-\", false),\n      peg$c52 = /^[1-9]/,\n      peg$c53 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c54 = /^[0-9]/,\n      peg$c55 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c56 = function(elems) { return parseInt(elems.join(\"\"), 10); },\n      peg$c57 = peg$otherExpectation(\"optional-ws\"),\n      peg$c58 = peg$otherExpectation(\"ws\"),\n      peg$c59 = /^[ \\t\\r\\n]/,\n      peg$c60 = peg$classExpectation([\" \", \"\\t\", \"\\r\", \"\\n\"], false, false),\n      peg$c61 = peg$otherExpectation(\"eof\"),\n      peg$c62 = peg$anyExpectation(),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parseprogram();\n\n    return s0;\n  }\n\n  function peg$parseprogram() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsedef();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsedef();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseadditive_app();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsews0();\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c0) {\n            s4 = peg$c0;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews0();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseeof();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c2(s1, s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseident() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 95) {\n      s1 = peg$c4;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c6();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      peg$silentFails++;\n      if (input.substr(peg$currPos, 3) === peg$c7) {\n        s1 = peg$c7;\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      peg$silentFails--;\n      if (s1 !== peg$FAILED) {\n        peg$currPos = s0;\n        s0 = void 0;\n      } else {\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 3) === peg$c9) {\n          s1 = peg$c9;\n          peg$currPos += 3;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c10); }\n        }\n        peg$silentFails--;\n        if (s1 !== peg$FAILED) {\n          peg$currPos = s0;\n          s0 = void 0;\n        } else {\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 4) === peg$c11) {\n            s1 = peg$c11;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          peg$silentFails--;\n          if (s1 !== peg$FAILED) {\n            peg$currPos = s0;\n            s0 = void 0;\n          } else {\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 5) === peg$c13) {\n              s1 = peg$c13;\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            peg$silentFails--;\n            if (s1 !== peg$FAILED) {\n              peg$currPos = s0;\n              s0 = void 0;\n            } else {\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (peg$c15.test(input.charAt(peg$currPos))) {\n                s1 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c16); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = [];\n                if (peg$c17.test(input.charAt(peg$currPos))) {\n                  s3 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                }\n                while (s3 !== peg$FAILED) {\n                  s2.push(s3);\n                  if (peg$c17.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c18); }\n                  }\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = [];\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s4 = peg$c19;\n                    peg$currPos++;\n                  } else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                  }\n                  while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                      s4 = peg$c19;\n                      peg$currPos++;\n                    } else {\n                      s4 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n                    }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c21(s1, s2, s3);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesimple_pat() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseunit_lit();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseident();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedef() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedef_fun();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews0();\n      if (s2 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c0) {\n          s3 = peg$c0;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews0();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c23(s1);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedef_fun() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c7) {\n      s1 = peg$c7;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c8); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseident();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = peg$parsews();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsesimple_pat();\n            if (s7 !== peg$FAILED) {\n              s6 = [s6, s7];\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parsews();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesimple_pat();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            }\n          } else {\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews0();\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 61) {\n                s6 = peg$c24;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c25); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsews0();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseadditive_app();\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26(s3, s4, s8);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseadditive_app() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemultiplicative_app();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews0();\n      if (s2 !== peg$FAILED) {\n        if (peg$c27.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews0();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseadditive_app();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c29(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsemultiplicative_app();\n    }\n\n    return s0;\n  }\n\n  function peg$parsemultiplicative_app() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsefun_app();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews0();\n      if (s2 !== peg$FAILED) {\n        if (peg$c30.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews0();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsemultiplicative_app();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c29(s1, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsefun_app();\n    }\n\n    return s0;\n  }\n\n  function peg$parsefun_app() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseparen_expr();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseparen_expr();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseparen_expr();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c32(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseparen_expr();\n    }\n\n    return s0;\n  }\n\n  function peg$parseparen_expr() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c33;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews0();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseadditive_app();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews0();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c35;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c37(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsevalue();\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalue() {\n    var s0;\n\n    s0 = peg$parseunit_lit();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsebool_lit();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseint_lit();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parselambda_expr();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseident();\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parselambda_expr() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c9) {\n      s1 = peg$c9;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c10); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsews();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsesimple_pat();\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsews();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesimple_pat();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsews0();\n        if (s3 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c38) {\n            s4 = peg$c38;\n            peg$currPos += 2;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c39); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsews0();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseadditive_app();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseunit_lit() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c33;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews0();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c35;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c42();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c41); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsebool_lit() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c11) {\n      s1 = peg$c11;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c12); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c44();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c13) {\n        s1 = peg$c13;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c45();\n      }\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseint_lit() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s1 = peg$c47;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c49();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s2 = peg$c50;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c51); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        if (peg$c52.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c53); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          if (peg$c54.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c55); }\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            if (peg$c54.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c55); }\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s2 = [s2, s3, s4];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c56(s1);\n      }\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c46); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews0() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parsew();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsew();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parsew();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsew();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsew() {\n    var s0;\n\n    if (peg$c59.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseeof() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n\r\n    class AstDefFun {\r\n      constructor(ident, params, body) {\r\n        this.type = 'function-definition';\r\n        this.ident = ident;\r\n        this.params = params;\r\n        this.body = body;\r\n      }\r\n    }\r\n    class AstAppFun {\r\n      constructor(f, args) {\r\n        this.type = 'function-application';\r\n        this.f = f;\r\n        this.args = args;\r\n      }\r\n    }\r\n    class AstLambdaExpr {\r\n      constructor(params, body) {\r\n        this.type = 'lambda-expr';\r\n        this.params = params;\r\n        this.body = body;\r\n      }\r\n    }\r\n    const ast_wildcard = 'ast-wildcard';\r\n    const ast_unit = 'ast-unit';\r\n\r\n    class AstProgram {\r\n      constructor(defs, expr) {\r\n        this.type = 'program';\r\n        this.defs = defs;\r\n        this.expr = expr;\r\n      }\r\n    }\r\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport function parse(input, options) {\n  return peg$parse(input, options);\n}\n","export function printAst(ast) {\r\n  const expr = ast.expr;\r\n  const res = [];\r\n  for (const def of ast.defs) {\r\n    res.push(printDef(def));\r\n  }\r\n  res.push(printExpr(ast.expr));\r\n  return res.join(';;\\n\\n');\r\n}\r\n\r\nfunction printDef(def) {\r\n  return 'let ' + def.ident + ' ' + printParams(def.params) + ' =\\n  ' + printExpr(def.body);\r\n}\r\n\r\nexport function printExpr(expr) {\r\n  switch (expr.type) {\r\n    case 'function-application':\r\n      switch (expr.f) {\r\n        case '+':\r\n        case '-':\r\n        case '*':\r\n        case '/':\r\n          return printExpr(expr.args[0]) + ' ' + expr.f + ' ' + printExpr(expr.args[1]);\r\n        default:\r\n          if (!expr.f) {\r\n            return 'oops!';\r\n          }\r\n          if (expr.f.type) {\r\n            return '(' + printExpr(expr.f) + ') ' + printArgs(expr.args);\r\n          } else {\r\n            return printExpr(expr.f) + ' ' + printArgs(expr.args);\r\n          }\r\n      }\r\n    case 'lambda-expr':\r\n      return 'fun ' + printParams(expr.params) + ' -> ' + printExpr(expr.body);\r\n    case undefined:\r\n      switch (expr) {\r\n        case 'ast-unit':\r\n          return '()';\r\n        case 'ast-wildcard':\r\n          return '_';\r\n        default:\r\n          return expr + '';\r\n      }\r\n  }\r\n  throw new Error('unsupported type: ' + expr.type);\r\n}\r\n\r\nfunction printParam(param) {\r\n  switch (param) {\r\n    case 'ast-unit':\r\n      return '()';\r\n    case 'ast-wildcard':\r\n      return '_';\r\n    default:\r\n      return param;\r\n  }\r\n}\r\n\r\nfunction printParams(params) {\r\n  const res = [];\r\n  for (const p of params) {\r\n    res.push(printParam(p));\r\n  }\r\n  return res.join(' ');\r\n}\r\n\r\nfunction printArgs(args) {\r\n  const res = [];\r\n  for (const arg of args) {\r\n    switch (arg.type) {\r\n      case 'lambda-expr':\r\n      case 'function-application':\r\n        res.push('(' + printExpr(arg) + ')');\r\n        break;\r\n      default:\r\n        res.push(printExpr(arg));\r\n        break;\r\n    }\r\n  }\r\n  return res.join(' ');\r\n}\r\n","export function astUnit() {\r\n  return 'ast-unit';\r\n}\r\n\r\nexport function astWildcard() {\r\n  return 'ast-wildcard';\r\n}\r\n\r\nexport function funDef(name, params, body) {\r\n  return {\r\n    type: 'function-definition',\r\n    ident: name,\r\n    params: params,\r\n    body: body,\r\n  };\r\n}\r\n\r\nexport function lambdaExpr(params, body) {\r\n  return {\r\n    type: 'lambda-expr',\r\n    params: params,\r\n    body: body,\r\n  };\r\n}\r\n\r\nexport function funApp(f, args) {\r\n  return {\r\n    type: 'function-application',\r\n    f: f,\r\n    args: args,\r\n  };\r\n}\r\n\r\nexport function reset(body) {\r\n  return funApp('reset', [lambdaExpr([astUnit()], body)]);\r\n}\r\n\r\nexport function shift(kName, body) {\r\n  return funApp('shift', [lambdaExpr([kName], body)]);\r\n}\r\n","import * as ast from './ast-utils.js'\r\nimport * as printer from './printer.js'\r\n\r\nlet id = 0;\r\nfunction gensym() {\r\n  return \"v\" + id++;\r\n}\r\n\r\nclass EvaluationContext {\r\n  constructor() {\r\n    this.outer = x => x;\r\n    this.current = x => x;\r\n  }\r\n  clone() {\r\n    const cloned = new EvaluationContext();\r\n    cloned.outer = this.outer;\r\n    cloned.current = this.current;\r\n    return cloned;\r\n  }\r\n}\r\n\r\nexport function step(defs, expr) {\r\n  id = 0;\r\n  const ectx = stepImpl(defs, expr, new EvaluationContext());\r\n  const res = ectx.outer(ectx.current(null));\r\n  return res;\r\n}\r\n\r\nfunction isValue(expr) {\r\n  return expr.type === undefined || expr.type === 'lambda-expr';\r\n}\r\n\r\nfunction isOpOrLambda(f) {\r\n  switch (f) {\r\n    case '+':\r\n    case '-':\r\n    case '*':\r\n    case '/':\r\n      return true;\r\n    default:\r\n      return f.type === 'lambda-expr';\r\n  }\r\n}\r\n\r\nfunction stepImpl(defs, expr, ectx) {\r\n  if (!expr.type) {\r\n    ectx.current = _ => expr;\r\n    return ectx;\r\n  } else {\r\n    switch (expr.type) {\r\n      case 'function-application':\r\n        switch (expr.f) {\r\n          case 'reset': {\r\n            const next = nextStepArgPos(expr.args);\r\n            if (next === -1 || next === 0) {\r\n              return stepReset(defs, expr.args[0].body, expr.args.slice(1), ectx);\r\n            } else {\r\n              const prev = ectx.current;\r\n              ectx.current = hole => {\r\n                const newArgs = expr.args.map(x => x);\r\n                newArgs[next] = hole;\r\n                return prev(ast.funApp(expr.f, newArgs));\r\n              };\r\n              return stepImpl(defs, expr.args[next], ectx);\r\n            }\r\n          }\r\n          case 'shift':\r\n            return stepShift(defs, expr.args[0], ectx);\r\n          default: {\r\n            const next = nextStepArgPos(expr.args);\r\n            if (next === -1) {\r\n              if (isOpOrLambda(expr.f)) {\r\n                return apply(defs, expr.f, expr.args, ectx);\r\n              } else if (expr.f.type === 'function-application') {\r\n                const newEctx = stepImpl(defs, expr.f, ectx.clone());\r\n                ectx.current = hole => ast.funApp(newEctx.outer(newEctx.current(hole)), expr.args);\r\n                return ectx;\r\n              } else {\r\n                return expand(defs, expr.f, expr.args, ectx);\r\n              }\r\n            } else {\r\n              const prev = ectx.current;\r\n              ectx.current = hole => {\r\n                const newArgs = expr.args.map(x => x);\r\n                newArgs[next] = hole;\r\n                return prev(ast.funApp(expr.f, newArgs));\r\n              };\r\n              return stepImpl(defs, expr.args[next], ectx);\r\n            }\r\n          }\r\n        }\r\n      case 'lambda-expr':\r\n        ectx.current = _ => expr;\r\n        return ectx;\r\n      default:\r\n        throw new Error('not implemented yet.');\r\n    }\r\n  }\r\n}\r\n\r\nfunction nextStepArgPos(args) {\r\n  for (let i = args.length - 1; i >= 0; i--) {\r\n    if (!isValue(args[i])) return i;\r\n  }\r\n  return -1;\r\n}\r\n\r\nfunction stepReset(defs, expr, args, ectx) {\r\n  if (isValue(expr)) {\r\n    const newExpr = ectx.current(expr);\r\n    switch (newExpr.type) {\r\n      case 'lambda-expr':\r\n        if (args.length !== 0)\r\n          ectx.current = _ => ast.funApp(newExpr, args);\r\n        else\r\n          ectx.current = _ => newExpr;\r\n        return ectx;\r\n      default:\r\n        ectx.current = _ => newExpr;\r\n        return ectx;\r\n    }\r\n  } else {\r\n    const oldEctx = ectx.clone();\r\n    const newEctx = stepImpl(defs, expr, new EvaluationContext());\r\n    ectx.current = hole => newEctx.outer(newEctx.current(hole));\r\n    ectx.outer = hole => oldEctx.outer(oldEctx.current(ast.funApp('reset', [ast.lambdaExpr([ast.astUnit()], hole), ...args])));\r\n    return ectx;\r\n  }\r\n}\r\n\r\nfunction stepShift(defs, expr, ectx) {\r\n  const v = gensym();\r\n  const newExpr = ast.funApp(expr, [ast.lambdaExpr([v], ast.funApp('reset', [ast.lambdaExpr([ast.astUnit()], ectx.current(v))]))]);\r\n  ectx.current = _ => newExpr;\r\n  return ectx;\r\n}\r\n\r\nfunction apply(defs, f, args, ectx) {\r\n  switch (f) {\r\n    case '+': {\r\n      const newExpr = ectx.current(args[0] + args[1]);\r\n      ectx.current = _ => newExpr;\r\n      return ectx;\r\n    }\r\n    case '-': {\r\n      const newExpr = ectx.current(args[0] - args[1]);\r\n      ectx.current = _ => newExpr;\r\n      return ectx;\r\n    }\r\n    case '*': {\r\n      const newExpr = ectx.current(args[0] * args[1]);\r\n      ectx.current = _ => newExpr;\r\n      return ectx;\r\n    }\r\n    case '/': {\r\n      const newExpr = ectx.current(args[0] / args[1]);\r\n      ectx.current = _ => newExpr;\r\n      return ectx;\r\n    }\r\n    default:\r\n      if (f.params.length == 1) {\r\n        const substituted = substitute(f.body, f.params[0], args[0]);\r\n        const newExpr = ectx.current(substituted);\r\n        if (args.length != 1)\r\n          ectx.current = _ => ast.funApp(newExpr, args.slice(1));\r\n        else\r\n          ectx.current = _ => newExpr;\r\n        return ectx;\r\n      } else {\r\n        const [p1, ...pRest] = f.params;\r\n        const [a1, ...aRest] = args;\r\n        const newLambda = ast.lambdaExpr([p1], ast.funApp(ast.lambdaExpr(pRest, f.body), aRest));\r\n        return apply(defs, newLambda, [a1], ectx);\r\n      }\r\n  }\r\n}\r\n\r\nfunction expand(defs, f, args, ectx) {\r\n  const varTable = new Map();\r\n  for (const d of defs) {\r\n    varTable.set(d.ident, d);\r\n  }\r\n  const def = varTable.get(f);\r\n  const syms = def.params.map(p => p);\r\n  for (let i = 0; i < syms.length; i++) {\r\n    varTable.set(def.params[i], syms[i]);\r\n  }\r\n  const newExpr = ectx.current(ast.funApp(ast.lambdaExpr(syms, def.body), args));\r\n  ectx.current = _ => newExpr;\r\n  return ectx;\r\n}\r\n\r\nfunction isComputed(expr) {\r\n  return typeof expr === 'number' && Number.isFinite(expr);\r\n}\r\n\r\nfunction substitute(body, ident, arg) {\r\n  const varTable = new Map([[ident, arg]]);\r\n  return substituteImpl(varTable, body);\r\n}\r\n\r\nfunction substituteImpl(varTable, expr) {\r\n  if (isComputed(expr)) {\r\n    return expr;\r\n  }\r\n  const v = varTable.get(expr);\r\n  if (v !== undefined) {\r\n    return v;\r\n  }\r\n  if (!expr.type) {\r\n    return expr;\r\n  }\r\n  switch (expr.type) {\r\n    case 'function-application': {\r\n      const newArgs = expr.args.map(a => substituteImpl(cloneMap(varTable), a));\r\n      const newF = substituteImpl(cloneMap(varTable), expr.f);\r\n      return ast.funApp(newF, newArgs);\r\n    }\r\n    case 'lambda-expr': {\r\n      const newVarTable = cloneMap(varTable);\r\n      for (const p of expr.params) {\r\n        newVarTable.delete(p);\r\n      }\r\n      const newBody = substituteImpl(newVarTable, expr.body);\r\n      return ast.lambdaExpr(expr.params, newBody);\r\n    }\r\n  }\r\n  throw new Error('not implemented yet. expr=' + printer.printExpr(expr) + ', varTable=' + mapToStr(varTable));\r\n}\r\n\r\nfunction cloneMap(m) {\r\n  return new Map([...m.entries()]);\r\n}\r\n\r\nfunction mapToStr(m) {\r\n  return '{' + [...m.entries()].map(([k, v]) => k + ':' + JSON.stringify(v)).join(', ') + '}';\r\n}\r\n","<template>\n  <div id=\"app\">\n    <textarea v-model=\"program\">\n    </textarea><br/>\n    <input type='button' value='parse' v-on:click=\"parse\"></input>\n    <p>{{error}}</p>\n    <pre>{{code}}</pre>\n    <ol>\n      <li v-for='(step, index) in steps' :key='index'>\n        {{printExpr(step)}}\n      </li>\n    </ol>\n    <input type='button' value='reduce' v-on:click=\"reduce\"></input>\n  </div>\n</template>\n\n<script>\nimport * as parser from './ocha/parser.js'\nimport * as printer from './ocha/printer.js'\nimport * as stepper from './ocha/stepper.js'\n\nexport default {\n  name: 'app',\n  components: {\n  },\n  data() {\n    return {\n      program:\n        'let get () = shift (fun k -> fun state -> k state state);;\\n' +\n        'let return result = fun _ -> result;;\\n' +\n        'let run_state thunk init = reset (fun () -> return (thunk ())) init;;\\n' +\n        'run_state (fun () -> get () + get ()) 3;;',\n      error: '',\n      code: '',\n      steps: [],\n      parsed: '',\n    };\n  },\n  methods: {\n    parse() {\n      if (!this.program) {\n        return;\n      }\n      try {\n        this.error = '';\n        this.parsed = parser.parse(this.program, {});\n        this.code = printer.printAst(this.parsed);\n        this.steps = [this.parsed.expr];\n      } catch (e) {\n        this.error = e;\n        this.parsed = '';\n        this.code = '';\n        this.steps = [];\n      }\n    },\n    reduce() {\n      if (this.steps.length == 0) {\n        return;\n      }\n      const target = this.steps[this.steps.length - 1];\n      const res = stepper.step(this.parsed.defs, target);\n      this.steps.push(res);\n    },\n    printExpr(expr) {\n      return printer.printExpr(expr);\n    },\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\ntextarea {\n  min-width: 500px;\n  min-height: 200px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6da98a50&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}